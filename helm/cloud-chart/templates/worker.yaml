#FogFlow worker deployment and service configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  #FogFlow cloud components will be deployed inside fogflow namespace
  namespace: {{ .Values.namespace }} 
  annotations:
    kompose.version: 1.21.0 (992df58d8)
    "helm.sh/hook-weight": "8"
  creationTimestamp: null
  labels:
    io.kompose.service: cloud-worker
  name: cloud-worker
spec:
  #replicas will make sure that no. of replicaCount mention in values.yaml
  # are running all the time for the deployment
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      io.kompose.service: cloud-worker
  minReadySeconds: 10   
  #strategy tells about How do want to update the pods? 
  strategy:
    rollingUpdate:
      maxSurge: 25% 
      maxUnavailable: 25% 
    type: RollingUpdate
  # This template field is a regular pod configuration
  # nested inside the deployment spec
  template:
    metadata:
      annotations:
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: cloud-worker
    spec:
      initContainers:
      - image: busybox:1.28
        imagePullPolicy: Always
        name: init-broker
        command: ['sh', '-c', 'sleep 80s;']
      containers:
      - image: fogflow/worker:newk8s
        imagePullPolicy: IfNotPresent 
        name: cloud-worker 
        #resources:
          #CPU and memory limits for dgraph deployment 
          #limits:
            #memory: 2Gi
            #cpu: 1 
          #requests:
            #memory: 1Gi
            #cpu: 1
        volumeMounts:
        - name: cloud-worker
          mountPath: /tmp
          readOnly: true
        - name: config-json 
          mountPath: /config.json
          readOnly: true
        - name: dockersock
          mountPath: "/var/run/docker.sock"  
      restartPolicy: Always
      #nodeSelector:
      #  master: cloud
      serviceAccountName: {{ .Values.serviceAccount.name }} 
      volumes:
      - name: config-json 
        hostPath:
          path: {{ .Values.configJson.hostPath.path }} 
      - name: cloud-worker
        hostPath:
          path: /tmp
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
